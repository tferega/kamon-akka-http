# ======================================= #
# Kamon-Akka-Http Reference Configuration #
# ======================================= #

kamon {
  akka-http {
    # When set to true, Kamon will automatically set and propogate the `TraceContext.token` value under the following
    # conditions:
    #  - When a server side request is received containing the trace token header, the new `TraceContext` will have that
    #    some token, and once the response to that request is ready, the trace token header is also included in the
    #    response.
    #  - When an akka-http-client request is issued and a `TraceContext` is available, the trace token header will be included
    #    in the `HttpRequest` headers.
    automatic-trace-token-propagation = true

    # Fully qualified name of the implementation of kamon.akka.http.AkkaHttpNameGenerator that will be used for assigning names
    # to traces and client http segments.
    name-generator = kamon.akka.http.DefaultNameGenerator

    client {
      # Strategy used for automatic trace segment generation when issue requests with akka-http-client. The possible values
      # are:
      #  - request-level: measures the time during which the user application code is waiting for an akka-http-client request to
      #    complete, by attaching a callback to the Future[HttpResponse] returned by `akka.http.scaladsl.HttpExt.singleRequest`.
      #    If `akka.http.scaladsl.HttpExt.singleRequest` is not used, the segment measurement wont be performed.
      #  - host-level [Not implemented yet!]: measures the internal time taken by akka-http-client to finish a request. Sometimes the user application
      #    code has a finite future timeout (like when using `akka.http.scaladsl.HttpExt.singleRequest`) that doesn't match
      #    the actual amount of time Akka Http might take internally to resolve a request, counting retries, redirects,
      #    connection timeouts and so on. If using the internal strategy, the measured time will include the entire time
      #    since the request has been received by the corresponding `HttpHostConnector` until a response is sent back
      #    to the requester.
      instrumentation-level = request-level
    }
  }

  modules {
    kamon-akka-http {
      requires-aspectj = yes
    }
  }
}
